/* eslint-disable camelcase */
import { zodToJsonSchema } from "openai/_vendor/zod-to-json-schema/zodToJsonSchema.mjs";
import { openaiClient } from ".";
import { iaRoleContent } from "./prompt";
import { type GeneratedRecipe, recipePromptSchema } from "./schemas/prompt";

export async function createRecipeCompletion(prompt: string): Promise<GeneratedRecipe | null> {
	const chatCompletion = await openaiClient.chat.completions.create({
		model: "deepseek/deepseek-chat-v3-0324:free",
		messages: [
			{
				role: "system",
				content: iaRoleContent,
			},
			{
				role: "user",
				content: prompt,
			},
		],
		temperature: 1,
		response_format: {
			type: "json_schema",
			json_schema: {
				name: "generatedRecipe",
				description: "A recipe generated by the AI based on the provided ingredients, intolerances, and number of persons.",
				schema: zodToJsonSchema(recipePromptSchema),
				strict: true,
			},
		},
	});

	const [{ message: { content } }] = chatCompletion.choices;

	const { data, error, success } = recipePromptSchema.safeParse(
		JSON.parse(content ?? "{}"),
	);

	if (!success) {
		throw new Error(`Parsing failed: ${error?.message}`);
	}

	return data;
}
